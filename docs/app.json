[{"name":"app.R","content":"# Define UI\nui <- fluidPage(\n  titlePanel(\"Cox Proportional Hazards Model Predictor\"),\n  sidebarLayout(\n    sidebarPanel(\n      sliderInput(\"input_age\", \"Input Age:\",\n                  min = min(surv_data$age), max = max(surv_data$age), value = median(surv_data$age)),\n      selectInput(\"input_gender\", \"Select Gender:\", choices = c(\"Male\", \"Female\")),\n      actionButton(\"plot_button\", \"Plot\")\n    ),\n    mainPanel(\n      plotOutput(\"survival_plot\")\n    )\n  )\n)","type":"text"},{"name":"server.R","content":"# Load required libraries\nlibrary(survival)\nlibrary(survminer)\nlibrary(shiny)\n\n# Generate sample survival data with age and gender\nset.seed(123)\nn <- 100\nage <- runif(n, 20, 80)\ngender <- sample(c(\"Male\", \"Female\"), n, replace = TRUE)\ntime <- rexp(n, rate = 0.1)\nstatus <- sample(0:1, n, replace = TRUE)\nsurv_data <- data.frame(time = time, status = status, age = age, gender = gender)\n\n# Fit Cox proportional hazards model\ncox_model <- coxph(Surv(time, status) ~ age + gender, data = surv_data)\n\n# Define server logic\nserver <- function(input, output) {\n  # Plot survival curve\n  output$survival_plot <- renderPlot({\n    new_data <- data.frame(age = input$input_age, gender = input$input_gender)\n    survfit(cox_model, newdata = new_data) %>%\n      ggsurvplot(data = surv_data, palette = \"Dark2\", conf.int = TRUE) +\n      ggtitle(\"Survival Curve with Confidence Interval\")\n  })\n}\n\n# Run the application\nshinyApp(ui = ui, server = server)\n","type":"text"},{"name":"cox_shiny.R","content":"# Load required libraries\nlibrary(survival)\nlibrary(survminer)\nlibrary(shiny)\n\n# Generate sample survival data with age and gender\nset.seed(123)\nn <- 100\nage <- runif(n, 20, 80)\ngender <- sample(c(\"Male\", \"Female\"), n, replace = TRUE)\ntime <- rexp(n, rate = 0.1)\nstatus <- sample(0:1, n, replace = TRUE)\nsurv_data <- data.frame(time = time, status = status, age = age, gender = gender)\n\n# Fit Cox proportional hazards model\ncox_model <- coxph(Surv(time, status) ~ age + gender, data = surv_data)\n\n# Define UI\nui <- fluidPage(\n  titlePanel(\"Cox Proportional Hazards Model Predictor\"),\n  sidebarLayout(\n    sidebarPanel(\n      sliderInput(\"input_age\", \"Input Age:\",\n                  min = min(surv_data$age), max = max(surv_data$age), value = median(surv_data$age)),\n      selectInput(\"input_gender\", \"Select Gender:\", choices = c(\"Male\", \"Female\")),\n      actionButton(\"plot_button\", \"Plot\")\n    ),\n    mainPanel(\n      plotOutput(\"survival_plot\")\n    )\n  )\n)\n\n# Define server logic\nserver <- function(input, output) {\n  # Plot survival curve\n  output$survival_plot <- renderPlot({\n    new_data <- data.frame(age = input$input_age, gender = input$input_gender)\n    survfit(cox_model, newdata = new_data) %>%\n      ggsurvplot(data = surv_data, palette = \"Dark2\", conf.int = TRUE) +\n      ggtitle(\"Survival Curve with Confidence Interval\")\n  })\n}\n\n# Run the application\nshinyApp(ui = ui, server = server)\n\n","type":"text"}]
